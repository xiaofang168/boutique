// Generated by CoffeeScript 1.6.3
var HashMap;

HashMap = (function() {
  function HashMap(size, entry) {
    this.size = size;
    this.entry = entry;
    this.size = 0;
    this.entry = new Object();
  }

  HashMap.prototype.put = function(key, value) {
    if (!this.containsKey(key)) {
      this.size = this.size + 1;
    }
    return this.entry[key] = value;
  };

  HashMap.prototype.get = function(key) {
    if (this.containsKey(key)) {
      return this.entry[key];
    } else {
      return null;
    }
  };

  HashMap.prototype.remove = function(key) {
    if (this.containsKey(key) && (delete this.entry[key])) {
      return this.size = this.size - 1;
    }
  };

  HashMap.prototype.containsKey = function(key) {
    return key in this.entry;
  };

  HashMap.prototype.containsValue = function(value) {
    var k, v, _ref;
    _ref = this.entry;
    for (k in _ref) {
      v = _ref[k];
      if (this.entry[k] === value) {
        return true;
      }
    }
    return false;
  };

  HashMap.prototype.values = function() {
    var prop, values;
    values = new Array();
    for (prop in this.entry) {
      values.push(this.entry[prop]);
    }
    return values;
  };

  HashMap.prototype.keys = function() {
    var keys, prop;
    keys = new Array();
    for (prop in this.entry) {
      keys.push(prop);
    }
    return keys;
  };

  HashMap.prototype.clear = function() {
    this.size = 0;
    return this.entry = new Object();
  };

  return HashMap;

})();